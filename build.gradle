//file:noinspection GroovyAssignabilityCheck
//file:noinspection VulnerableLibrariesLocal
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7+'
}

group = "cn.hamster3"
version = "2.4.8-SNAPSHOT"
archivesBaseName = "HamsterAPI"

repositories {
    maven {
        url = "https://maven.airgame.net/maven-public/"
    }
}

dependencies {
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation 'com.zaxxer:HikariCP:4.0.3' exclude group: "org.slf4j"

    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    compileOnly group: 'org.jetbrains', name: 'annotations', version: '21.0.1'

    compileOnly 'org.spigotmc:spigot-api:1.20-R0.1-SNAPSHOT'
    compileOnly 'com.comphenix.protocol:ProtocolLib:4.7.0'
    compileOnly 'net.milkbowl.vault:VaultAPI:1.7'

    compileOnly fileTree(dir: 'libs', includes: ['*.jar'])
}

processResources {
    inputs.property "version", project.version

    filesMatching("plugin.yml") {
        expand "version": project.version
    }
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked"
}

shadowJar {
    relocate 'com.zaxxer', 'cn.hamster3.api.shadow.com.zaxxer'
    destinationDir(rootProject.buildDir)
}
tasks.build.dependsOn(shadowJar)

javadoc {
    options.quiet()
    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
    options.links = [
            "https://javadoc.io/doc/org.jetbrains/annotations/21.0.1",
            'https://javadoc.io/doc/com.google.code.gson/gson/2.8.0',
            'https://ci.dmulloy2.net/job/ProtocolLib/javadoc',
            'http://milkbowl.github.io/VaultAPI',
            'https://bukkit.windit.net/javadoc'
    ]
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            {
                from components.java
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://maven.airgame.net/maven-releases/'
            def snapshotsRepoUrl = 'https://maven.airgame.net/maven-snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username maven_username
                password maven_password
            }
        }
    }
}